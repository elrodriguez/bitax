{"version":3,"sources":["./src/app/pages/login/login.page.html","./src/app/pages/login/login-routing.module.ts","./src/app/pages/login/login.module.ts","./src/app/pages/login/login.page.scss","./src/app/pages/login/login.page.ts"],"names":[],"mappings":"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","file":"pages-login-login-module-es2015.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>login</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content fullscreen>\\n  <form class=\\\"form\\\" [formGroup]=\\\"validations_form\\\"  (ngSubmit)=\\\"loginUser(validations_form.value)\\\" >\\n    <ion-grid class=\\\"ion-no-padding\\\">\\n      <ion-row>\\n        <ion-col offset-xl=\\\"5\\\" size-xl=\\\"2\\\" class=\\\"ion-no-padding\\\">\\n          <ion-list>\\n            <ion-item>\\n              <ion-label  position=\\\"stacked\\\" >Email</ion-label>\\n              <ion-input type=\\\"text\\\" formControlName=\\\"email\\\"></ion-input>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n              <ng-container *ngFor=\\\"let validation of validation_messages.email\\\">\\n                <div class=\\\"error-message\\\" *ngIf=\\\"validations_form.get('email').hasError(validation.type) && (validations_form.get('email').dirty || validations_form.get('email').touched)\\\">\\n                  {{ validation.message }}\\n                </div>\\n              </ng-container>\\n            </div>\\n        \\n            <ion-item>\\n              <ion-label  position=\\\"stacked\\\">Password</ion-label>\\n              <ion-input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-controll\\\" required></ion-input>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n              <ng-container *ngFor=\\\"let validation of validation_messages.password\\\">\\n                <div class=\\\"error-message\\\" *ngIf=\\\"validations_form.get('password').hasError(validation.type) && (validations_form.get('password').dirty || validations_form.get('password').touched)\\\">\\n                  {{ validation.message }}\\n                </div>\\n              </ng-container>\\n            </div>\\n          </ion-list>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n    <ion-grid>\\n      <ion-row>\\n        <ion-col offset-xl=\\\"5\\\" size-xl=\\\"2\\\">\\n          <section>\\n            <ion-button expand=\\\"block\\\" class=\\\"submit-btn\\\" type=\\\"submit\\\"  [disabled]=\\\"!validations_form.valid\\\">Iniciar sesión</ion-button>\\n          </section>\\n          <section>\\n            <label class=\\\"error-message\\\">{{ errorMessage }}</label>\\n          </section>\\n          <p class=\\\"go-to-register\\\">\\n            No tienes cuenta aún? <a (click)=\\\"goToRegisterPage()\\\">Crea una cuenta.</a>\\n          </p>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </form>\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LoginPageRoutingModule,\n    ReactiveFormsModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2xvZ2luL2xvZ2luLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { NavController } from '@ionic/angular';\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { UserService } from 'src/app/services/api/system/user.service';\nimport { User } from 'src/app/interfaces/user';\nimport { AlertService } from 'src/app/services/components/alert.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n\n  validations_form: FormGroup;\n  errorMessage: string = '';\n\n  constructor(\n    private navCtrl: NavController,\n    private authService: AuthenticationService,\n    private userService: UserService,\n    private formBuilder: FormBuilder,\n    private alertService: AlertService\n  ) { }\n\n  ngOnInit() {\n    this.validations_form = this.formBuilder.group({\n      email: new FormControl('', Validators.compose([\n        Validators.required,\n        Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\n      ])),\n      password: new FormControl('', Validators.compose([\n        Validators.minLength(5),\n        Validators.required\n      ])),\n    });\n  }\n\n  validation_messages = {\n    'email': [\n      { type: 'required', message: 'Email is required.' },\n      { type: 'pattern', message: 'Please enter a valid email.' }\n    ],\n    'password': [\n      { type: 'required', message: 'Password is required.' },\n      { type: 'minlength', message: 'Password must be at least 5 characters long.' }\n    ]\n  };\n \n \n  loginUser(value){\n    this.authService.loginUser(value).then(res => {\n      this.userService.getUserById(res.user.uid).valueChanges().subscribe((data: User) => {\n        localStorage.setItem(\"user\", JSON.stringify(data));\n        this.errorMessage = \"\";\n        this.navCtrl.navigateForward('/dashboard');\n      },(error2) => {\n        console.log(error2);\n      });\n    }, err => {\n      this.alertService.presentAlert('Error','No pudiste iniciar sesión','la contraseña no es válida o el usuario no tiene una contraseña.');\n      //this.errorMessage = err.message;\n    })\n  }\n\n  goToRegisterPage(){\n    this.navCtrl.navigateForward('/register');\n  }\n  \n}\n"],"sourceRoot":""}